{"version":3,"sources":["webpack:///./src/pages/works.js"],"names":["WorkIndex","works","data","allMarkdownRemark","edges","title","className","map","node","frontmatter","fields","slug","key","to","fluid","image","childImageSharp","category","style","boxShadow","dangerouslySetInnerHTML","__html","description","excerpt","tags","tag","index"],"mappings":"8FAAA,qGA6EeA,UA7DG,SAAC,GAAc,IACzBC,EADwB,EAAXC,KACAC,kBAAkBC,MAErC,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,cACX,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,UAAU,aAApB,iBAEA,kBAAC,IAAD,CAAiBA,UAAU,WACxBL,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNH,EAAQG,EAAKC,YAAYJ,OAASG,EAAKE,OAAOC,KACpD,OACE,kBAAC,IAAD,CAAUC,IAAKJ,EAAKE,OAAOC,MACzB,yBAAKL,UAAU,SACb,yBAAKA,UAAU,iBACb,kBAAC,OAAD,CAAMO,GAAIL,EAAKE,OAAOC,MACpB,kBAAC,IAAD,CACEG,MAAON,EAAKC,YAAYM,MAAMC,gBAAgBF,MAC9CT,MAAM,kBAKd,yBAAKC,UAAU,WACb,gCACE,kBAAC,IAAD,KAAWE,EAAKC,YAAYQ,UAC5B,kBAAC,IAAD,KACE,kBAAC,OAAD,CACEX,UAAU,0BACVY,MAAO,CAAEC,UAAU,QACnBN,GAAIL,EAAKE,OAAOC,MAEfN,KAIP,kBAAC,IAAD,CACEe,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,WAGjD,6BACGf,EAAKC,YAAYe,KAAKjB,KAAI,SAACkB,EAAKC,GAAN,OACzB,kBAAC,IAAD,CAAKd,IAAKc,GAAQD","file":"component---src-pages-works-js-e0c449a5549fd9e81ad1.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport {\n  Tag,\n  ContainerLayout,\n  WorkPost,\n  Category,\n  Intro,\n  SubTitle,\n  Title,\n  Text,\n} from \"../components/common\"\n\nconst WorkIndex = ({ data }) => {\n  const works = data.allMarkdownRemark.edges\n\n  return (\n    <>\n      <Layout>\n        <SEO title=\"Showcases\" />\n        <Intro>\n          <ContainerLayout>\n            <SubTitle className=\"text-dark\">Selected Work</SubTitle>\n\n            <ContainerLayout className=\"wrapper\">\n              {works.map(({ node }) => {\n                const title = node.frontmatter.title || node.fields.slug\n                return (\n                  <WorkPost key={node.fields.slug}>\n                    <div className=\"media\">\n                      <div className=\"image-wrapper\">\n                        <Link to={node.fields.slug}>\n                          <Img\n                            fluid={node.frontmatter.image.childImageSharp.fluid}\n                            title=\"work title\"\n                          />\n                        </Link>\n                      </div>\n                    </div>\n                    <div className=\"content\">\n                      <header>\n                        <Category>{node.frontmatter.category}</Category>\n                        <Title>\n                          <Link\n                            className=\"text-primary lined-link\"\n                            style={{ boxShadow: `none` }}\n                            to={node.fields.slug}\n                          >\n                            {title}\n                          </Link>\n                        </Title>\n                      </header>\n                      <Text\n                        dangerouslySetInnerHTML={{\n                          __html: node.frontmatter.description || node.excerpt,\n                        }}\n                      />\n                      <div>\n                        {node.frontmatter.tags.map((tag, index) => (\n                          <Tag key={index}>{tag}</Tag>\n                        ))}\n                      </div>\n                    </div>\n                  </WorkPost>\n                )\n              })}\n            </ContainerLayout>\n          </ContainerLayout>\n        </Intro>\n      </Layout>\n    </>\n  )\n}\n\nexport default WorkIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(works)/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            image {\n              childImageSharp {\n                fluid(maxWidth: 600, quality: 100) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            tags\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}