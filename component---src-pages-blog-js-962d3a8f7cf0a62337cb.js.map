{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["BlogIndex","posts","data","allMarkdownRemark","edges","title","className","map","node","frontmatter","fields","slug","key","to","fluid","image","childImageSharp","href","imageCredit","target","categories","item","index","kebabCase","length","style","boxShadow","width","height","date","time","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"2FAAA,8JAiJeA,UA3HG,SAAC,GAAc,IACzBC,EADwB,EAAXC,KACAC,kBAAkBC,MAErC,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,mBACX,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,0NAMA,kBAAC,IAAD,OAGF,kBAAC,IAAD,CAAiBC,UAAU,WACxBL,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNH,EAAQG,EAAKC,YAAYJ,OAASG,EAAKE,OAAOC,KACpD,OACE,kBAAC,IAAD,CAAUC,IAAKJ,EAAKE,OAAOC,MACzB,yBAAKL,UAAU,SACb,yBAAKA,UAAU,iBACb,kBAAC,OAAD,CAAMO,GAAIL,EAAKE,OAAOC,MACpB,kBAAC,IAAD,CACEG,MAAON,EAAKC,YAAYM,MAAMC,gBAAgBF,MAC9CT,MAAM,iBAIZ,kBAAC,IAAD,uBAEE,kBAAC,IAAD,CACEY,KAAMT,EAAKC,YAAYS,YACvBC,OAAO,SACPd,MAAM,gBAELG,EAAKC,YAAYS,eAKxB,yBAAKZ,UAAU,WACb,gCACE,kBAAC,IAAD,KACE,0BAAMA,UAAU,gBACbE,EAAKC,YAAYW,WAAWb,KAAI,SAACc,EAAMC,GAAP,OAC/B,kBAAC,OAAD,CAAMT,GAAE,IAAMU,IAAUF,GAAST,IAAKU,GACpC,0BAAMhB,UAAU,4CAAhB,IACIe,GAEHb,EAAKC,YAAYW,WAAWI,SAC7BF,EAAQ,EACN,0BAAMhB,UAAU,6BACb,IADH,IAEI,KAGJ,OAGF,MAGR,kBAAC,IAAD,KACE,kBAAC,OAAD,CACEA,UAAU,eACVmB,MAAO,CAAEC,UAAU,QACnBb,GAAIL,EAAKE,OAAOC,MAEfN,IAGL,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,UAAU,4BACVqB,MAAM,KACNC,OAAO,OAET,0BAAMtB,UAAU,gBACb,IADH,oBAEoBE,EAAKC,YAAYoB,KAAM,MAG7C,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEvB,UAAU,4BACVqB,MAAM,KACNC,OAAO,OAET,0BAAMtB,UAAU,gBACb,IADH,eAEeE,EAAKC,YAAYqB,KAAM,OAI1C,kBAAC,IAAD,CACEC,wBAAyB,CACvBC,OAAQxB,EAAKC,YAAYwB,aAAezB,EAAK0B,WAGjD,kBAAC,OAAD,CAAMrB,GAAIL,EAAKE,OAAOC,MACpB,kBAAC,IAAD,CAAUL,UAAU,cACjB,IADH,cAEoB","file":"component---src-pages-blog-js-962d3a8f7cf0a62337cb.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Link, graphql } from \"gatsby\"\nimport { Calendar, Clock } from \"react-feather\"\nimport Img from \"gatsby-image\"\nimport {\n  ContainerLayout,\n  WorkPost,\n  Intro,\n  SubTitle,\n  Title,\n  Text,\n  HeaderIntro,\n  SubText,\n  SmallText,\n  UnderLink,\n  ReadMore,\n} from \"../components/common\"\nimport CategoriesTags from \"../components/CategoriesTags/categoriesTags\"\nimport kebabCase from \"lodash/kebabCase\"\n\nconst BlogIndex = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <>\n      <Layout>\n        <SEO title=\"Blog Home Page\" />\n        <Intro>\n          <ContainerLayout>\n            <SubTitle>Articles</SubTitle>\n            <HeaderIntro>\n              <SubText>\n                Articles on front-end design engineering, focused on HTML, CSS,\n                SVG, accessiblity, and everything in between, with practical\n                tips from real projects. Included here are links to articles\n                published on magazines.\n              </SubText>\n              <CategoriesTags />\n            </HeaderIntro>\n\n            <ContainerLayout className=\"wrapper\">\n              {posts.map(({ node }) => {\n                const title = node.frontmatter.title || node.fields.slug\n                return (\n                  <WorkPost key={node.fields.slug}>\n                    <div className=\"media\">\n                      <div className=\"image-wrapper\">\n                        <Link to={node.fields.slug}>\n                          <Img\n                            fluid={node.frontmatter.image.childImageSharp.fluid}\n                            title=\"work title\"\n                          />\n                        </Link>\n                      </div>\n                      <SmallText>\n                        Image Credits :\n                        <UnderLink\n                          href={node.frontmatter.imageCredit}\n                          target=\"_blank\"\n                          title=\"image credit\"\n                        >\n                          {node.frontmatter.imageCredit}\n                        </UnderLink>\n                      </SmallText>\n                    </div>\n\n                    <div className=\"content\">\n                      <header>\n                        <SmallText>\n                          <span className=\"align-middle\">\n                            {node.frontmatter.categories.map((item, index) => (\n                              <Link to={`/${kebabCase(item)}`} key={index}>\n                                <span className=\"align-middle text-primary text-underline\">\n                                  #{item}\n                                </span>\n                                {node.frontmatter.categories.length !==\n                                index + 1 ? (\n                                  <span className=\"align-middle text-primary\">\n                                    {\" \"}\n                                    ,{\" \"}\n                                  </span>\n                                ) : (\n                                  \"\"\n                                )}\n                              </Link>\n                            ))}{\" \"}\n                          </span>\n                        </SmallText>\n                        <Title>\n                          <Link\n                            className=\"text-primary\"\n                            style={{ boxShadow: `none` }}\n                            to={node.fields.slug}\n                          >\n                            {title}\n                          </Link>\n                        </Title>\n                        <SmallText>\n                          <Calendar\n                            className=\"align-middle text-primary\"\n                            width=\"18\"\n                            height=\"18\"\n                          />\n                          <span className=\"align-middle\">\n                            {\" \"}\n                            date published : {node.frontmatter.date}{\" \"}\n                          </span>\n                        </SmallText>\n                        <SmallText>\n                          <Clock\n                            className=\"align-middle text-primary\"\n                            width=\"18\"\n                            height=\"18\"\n                          />\n                          <span className=\"align-middle\">\n                            {\" \"}\n                            read time : {node.frontmatter.time}{\" \"}\n                          </span>\n                        </SmallText>\n                      </header>\n                      <Text\n                        dangerouslySetInnerHTML={{\n                          __html: node.frontmatter.description || node.excerpt,\n                        }}\n                      />\n                      <Link to={node.fields.slug}>\n                        <ReadMore className=\"lined-link\">\n                          {\" \"}\n                          read more &#8594;{\" \"}\n                        </ReadMore>\n                      </Link>\n                    </div>\n                  </WorkPost>\n                )\n              })}\n            </ContainerLayout>\n          </ContainerLayout>\n        </Intro>\n      </Layout>\n    </>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(blog)/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            time\n            title\n            image {\n              childImageSharp {\n                fluid(maxWidth: 600, quality: 100) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            categories\n            imageCredit\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}